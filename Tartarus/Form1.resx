<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        oEr1w8IAAAAASUVORK5CYII=
</value>
  </data>
</root>